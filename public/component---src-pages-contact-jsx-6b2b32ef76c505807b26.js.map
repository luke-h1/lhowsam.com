{"version":3,"sources":["webpack:///./src/components/Contact/ContactElements.jsx","webpack:///./src/components/Contact/Contact.jsx","webpack:///./src/pages/contact.jsx"],"names":["ContactWrapper","styled","div","props","theme","primaryBackgroundColor","primaryColor","primaryTitleColor","Alternatives","h1","IconWrapper","EmailIcon","AiOutlineMail","LinkedIn","FaLinkedin","Github","FaGithub","Contact","title","Provider","value","color","size","href","aria-label","target","rel","defaultProps","propTypes","PropTypes","string","isRequired","contact","data","location","siteTitle","site","siteMetadata"],"mappings":"yNAMaA,EAAiBC,IAAOC,IAAV,sFAAGD,CAAH,iKAGL,SAACE,GAAD,OAAWA,EAAMC,MAAMC,0BAKlC,SAACF,GAAD,OAAWA,EAAMC,MAAME,gBAGrB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,qBAcvBC,GATYP,IAAOQ,GAAV,iFAAGR,CAAH,0HAMA,SAACE,GAAD,OAAWA,EAAMC,MAAMC,0BAGjBJ,IAAOC,IAAV,oFAAGD,CAAH,yMAkBZS,EAAcT,IAAOC,IAAV,mFAAGD,CAAH,iHASXU,EAAYV,YAAOW,KAAV,iFAAGX,CAAH,6GAEZ,SAACE,GAAD,OAAWA,EAAMC,MAAME,gBAQpBO,EAAWZ,YAAOa,KAAV,gFAAGb,CAAH,2GAEX,SAACE,GAAD,OAAWA,EAAMC,MAAME,gBAQpBS,EAASd,YAAOe,KAAV,8EAAGf,CAAH,2GAET,SAACE,GAAD,OAAWA,EAAMC,MAAME,gBClE3BW,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACd,kBAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,MAAO,OAAQC,KAAM,KAClD,oCACE,kBAACtB,EAAD,KACE,4CACA,kBAACQ,EAAD,KACE,4BAAKU,GACL,6BACA,kBAACR,EAAD,KACE,uBACEa,KAAK,oDACLC,aAAW,SAEX,kBAACb,EAAD,OAEF,uBACEY,KAAK,0CACLE,OAAO,SACPC,IAAI,sBACJF,aAAW,YAEX,kBAACX,EAAD,OAED,IACD,uBACEU,KAAK,6BACLE,OAAO,SACPC,IAAI,sBACJF,aAAW,UAEX,kBAACT,EAAD,aASdE,EAAQU,aAAe,CACrBT,MAAO,wBAGTD,EAAQW,UAAY,CAClBV,MAAOW,IAAUC,OAAOC,YAGXd,QC3CAe,UAZC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAU9B,EAAY,EAAZA,MAC3B+B,EAAYF,EAAKG,KAAKC,aAAanB,OAAS,SAGlD,OACE,kBAAC,IAAD,CAAQgB,SAAUA,EAAUhB,MAAOiB,GACjC,kBAAC,IAAD,CAAKjB,MAAM,SACX,kBAAC,EAAD,CAASd,MAAOA","file":"component---src-pages-contact-jsx-6b2b32ef76c505807b26.js","sourcesContent":["/* eslint-disable */\nimport styled from 'styled-components';\nimport { AiOutlineMail } from 'react-icons/ai';\nimport { FaLinkedin, FaGithub } from 'react-icons/fa';\n\n\nexport const ContactWrapper = styled.div`\n  min-height: 100vh;\n  min-width: 100vw;\n  background-color: ${(props) => props.theme.primaryBackgroundColor}; \n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.theme.primaryColor}; \n\n  h1 { \n    color: ${(props) => props.theme.primaryTitleColor}; \n\n  }\n`;\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 2em;\n  line-height: 2;\n  letter-spacing: 5px;\n  filter: brightness(1.5);\n  filter: contrast(300);\n  background-color: ${(props) => props.theme.primaryBackgroundColor}; \n`;\n\nexport const Alternatives = styled.div`\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h3 {\n    word-wrap: wrap;\n  }\n  a {\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 8px;\n  @media (max-width: 640px) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const EmailIcon = styled(AiOutlineMail)`\n  font-size: 20px;\n  fill: ${(props) => props.theme.primaryColor}; \n  margin: 0 1em 5px 1em;\n  &:hover {\n    transform: scale(1.15);\n    transition: scale ease 0.5s;\n  }\n`;\n\nexport const LinkedIn = styled(FaLinkedin)`\n  font-size: 20px;\n  fill: ${(props) => props.theme.primaryColor}; \n  margin: 0 1em 0 1em;\n  &:hover {\n    transform: scale(1.15);\n    transition: scale ease 0.5s;\n  }\n`;\n\nexport const Github = styled(FaGithub)`\n  font-size: 20px;\n  fill: ${(props) => props.theme.primaryColor}; \n  margin: 0 1em 0 1em;\n  &:hover {\n    transform: scale(1.15);\n    transition: scale ease 0.5s;\n  }\n`;","/* eslint-disable react/default-props-match-prop-types */\n/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport { IconContext } from 'react-icons/lib';\nimport PropTypes from 'prop-types';\nimport {\n  ContactWrapper,\n  Alternatives,\n  IconWrapper,\n  EmailIcon,\n  LinkedIn,\n  Github,\n} from './ContactElements';\n\nconst Contact = ({ title }) => (\n  <IconContext.Provider value={{ color: '#fff', size: 64 }}>\n    <>\n      <ContactWrapper>\n        <h1>Get in touch</h1>\n        <Alternatives>\n          <h3>{title}</h3>\n          <br />\n          <IconWrapper>\n            <a\n              href=\"mailto:luke.howsam@yahoo.com?subject=Get In Touch\"\n              aria-label=\"Email\"\n            >\n              <EmailIcon />\n            </a>\n            <a\n              href=\"https://www.linkedin.com/in/lukehowsam/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Linkedin\"\n            >\n              <LinkedIn />\n            </a>\n            {' '}\n            <a\n              href=\"https://github.com/luke-h1\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              aria-label=\"Github\"\n            >\n              <Github />\n            </a>\n          </IconWrapper>\n        </Alternatives>\n      </ContactWrapper>\n    </>\n  </IconContext.Provider>\n);\n\nContact.defaultProps = {\n  title: 'You can reach me on:',\n};\n\nContact.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Contact from '../components/Contact/Contact';\n\nconst contact = ({ data, location, theme }) => {\n  const siteTitle = data.site.siteMetadata.title || 'Luke H';\n  // const posts = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <Contact theme={theme} />\n    </Layout>\n  );\n};\n\nexport default contact;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}