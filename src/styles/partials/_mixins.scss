$breakpoints: (
  xs: 0,
  sm: 575px,
  md: 990px,
  lg: 1200px,
  xl: 1400px,
) !default;

@mixin media($breakpoint, $map: $breakpoints) {
  @if type-of($map) == map {
    @if map-has-key($map, $breakpoint) {
      @media (min-width: #{map-get($map, $breakpoint)}) {
        @content;
      }
    } @else {
      @warn "No value could be retrieved from `#{breakpoint}`." + "Available breakpoints: #{map-keys($map)}";
    }
  } @else {
    @warn "the map `#{$map}` isn't defined or is invalid." + "Available maps: #{map-keys($breakpoints)}";
  }
}

@mixin media-max($breakpoint) {
  $max-width: get-next($breakpoint, $map: $breakpoints);
  @media (max-width: ($max-width -1)) {
    @content;
  }
}

@function get-next($key, $map) {
  @if map-has-key($map, $key) {
    $i: 0;
    $key-index: false;

    @each $map-key, $map-value in $map {
      $i: $i + 1;

      @if $map-key == $key {
        $key-index: $i;
      }

      @if $i == $key-index + 1 {
        @return $map-value;
      }

      @if $i == length($map) {
        @return $map-value;
      }
    }
  }
}

@mixin media-below($b) {
  @if not map-has-key($breakpoints, $b) {
    @error "No value could be retrieved from `#{$b}`." + "Available breakpoints: #{map-keys($breakpoints)}";
  }

  @media (max-width: #{map-get($breakpoints, $b) - 1px}) {
    @content;
  }
}

@mixin media-above($b) {
  @if not map-has-key($breakpoints, $b) {
    @error "No value could be retrieved from `#{$b}`." + "Available breakpoints: #{map-keys($breakpoints)}";
  }

  @media (min-width: #{map-get($breakpoints, $b) + 1px}) {
    @content;
  }
}

@mixin media-between($b1, $b2) {
  @if not map-has-key($breakpoints, $b1) {
    @error "No value could be retrieved from `#{$b1}`." + "Available breakpoints: #{map-keys($breakpoints)}";
  }

  @if not map-has-key($breakpoints, $b2) {
    @error "No value could be retrieved from `#{$b2}`." + "Available breakpoints: #{map-keys($breakpoints)}";
  }

  @media (min-width: #{map-get($breakpoints, $b1) + 1px}) and (max-width: #{map-get($breakpoints, $b2) -1px}) {
    @content;
  }
}
