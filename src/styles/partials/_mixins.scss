@mixin mediaquery($query) {
  $breakpoints: (
    'xs': '(min-width: 500px)',
    'sm': '(min-width: 639px)',
    'md': '(min-width: 768px)',
    'lg': '(min-width: 800px)',
    'xl': '(min-width: 1150px)',
    'xxl': '(min-width: 1450px)',
    'xxxl': '(min-width: 2000px)',
  );

  @if map-has-key($breakpoints, $query) {
    @media screen and #{map-get($breakpoints, $query)} {
      @content;
    }
  } @else {
    @error "No breakpoint available for query '#{$query}'";
  }
}

@mixin placeholder() {
  &::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    @content;
  }
  &::-moz-placeholder {
    /* Firefox 19+ */
    opacity: 1;
    @content;
  }
  &::-ms-input-placeholder {
    /* Edge */
    @content;
  }
  &:-ms-input-placeholder {
    /* IE 10+ */
    @content;
  }
  &:-moz-placeholder {
    /* Firefox 18- */
    @content;
  }
}

@mixin flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

// legacy media queries
$breakpoints: (
  xs: 0,
  sm: 575px,
  md: 990px,
  lg: 1200px,
  xl: 1400px,
) !default;

/* 
  example of getting $breakpoints: 
  min-width: map-get($breakpoints, 'md');
*/

@mixin media($breakpoint, $map: $breakpoints) {
  @if type-of($map) == map {
    @if map-has-key($map, $breakpoint) {
      @media (min-width: #{map-get($map, $breakpoint)}) {
        @content;
      }
    } @else {
      @warn "No value could be retrieved from `#{breakpoint}`." + "Available breakpoints: #{map-keys($map)}";
    }
  } @else {
    @warn "the map `#{$map}` isn't defined or is invalid." + "Available maps: #{map-keys($breakpoints)}";
  }
}

@mixin flex($jus: center, $ali: center) {
  display: flex;
  justify-content: $jus;
  align-items: $ali;
}
