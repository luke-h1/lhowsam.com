name: Analyze Bundle

on:
  pull_request:
    branches-ignore:
      - main  
  push:
    branches:
      - dev
  workflow_dispatch:
env:
  NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pnpm i --no-frozen-lockfile

      - name: Build next.js app
        run: pnpm run build

      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report
        working-directory: .

      - name: Upload bundle
        uses: actions/upload-artifact@v3
        with:
          path: .next/analyze/__bundle_analysis.json
          name: bundle_analysis.json

      - name: Download base branch bundle stats
        uses: luke-h1/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: analyze.yml
          branch: ${{ github.event.pull_request.base.ref }}
          name: bundle_analysis.json
          path: .next/analyze/base/bundle

      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Upload analysis comment
        uses: actions/upload-artifact@v3
        with:
          name: analysis_comment.txt
          path: .next/analyze/__bundle_analysis_comment.txt

      - name: Save PR number
        run: echo ${{ github.event.number }} > ./pr_number

      - name: Upload PR number
        uses: actions/upload-artifact@v3
        with:
          name: pr_number
          path: ./pr_number

      # The actual commenting happens in the other action, matching the guidance in
      # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/