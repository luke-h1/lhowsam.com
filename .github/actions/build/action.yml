name: 'Build frontend'
description: 'Build frontend app'
runs:
  using: 'composite'
  steps:
      - name: Install moreutils
        run: sudo apt install moreutils
        shell: bash
        
      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        run: sudo ethtool -K eth0 tx off rx off
        shell: bash

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-lho-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-lho-

      - name: Install dependencies
        run: pnpm i
        shell: bash

      - uses: actions/labeler@v4
        with:
          sync-labels: true

      - name: Check commit message
        run: pnpm commitlint --from=HEAD^1
        shell: bash

      - name: format:check
        run: pnpm format:check
        shell: bash

      - name: lint
        run: pnpm lint
        shell: bash

      - name: jest
        run: pnpm test:ci
        shell: bash

      - name: tsc
        run: pnpm tsc
        shell: bash

      - name: Restore next build
        uses: actions/cache@v3
        id: restore-build-cache
        env:
          cache-name: cache-next-build
        with:
          path: .next/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: build
        run: pnpm build
        shell: bash

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV
        shell: bash

      - name: Cache playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: make e2e-install-browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        shell: bash

      - name: local UI tests
        run: make e2e-local-ci
        shell: bash
