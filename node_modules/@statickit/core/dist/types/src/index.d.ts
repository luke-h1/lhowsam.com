/// <reference types="promise-polyfill" />
import { FunctionArgs, FunctionOptions, FunctionResponse } from './functions';
import { SubmissionData, SubmissionOptions, SubmissionResponse } from './forms';
export interface Config {
    site: string;
}
export declare class StaticKit {
    site: string;
    private session;
    constructor(config: Config);
    /**
     * Starts a browser session.
     */
    startBrowserSession(): void;
    /**
     * Teardown the client session.
     */
    teardown(): void;
    /**
     * Submit a form.
     *
     * @param key - The form key.
     * @param data - An object or FormData instance containing submission data.
     * @param args - An object of form submission data.
     */
    submitForm(key: string, data: SubmissionData, opts?: SubmissionOptions): Promise<SubmissionResponse>;
    /**
     * Invoke a function.
     *
     * @param name - The function name.
     * @param args - An object of function arguments.
     * @param opts - An object of options.
     */
    invokeFunction(name: string, args: FunctionArgs, opts?: FunctionOptions): Promise<FunctionResponse>;
}
/**
 * Constructs the client object.
 */
export declare const createClient: (config: Config) => StaticKit;
